;******************************************************************
;DAG-RELATED SUBROUTINES ******************************************
;******************************************************************

to loadDAG
  if approximation = "gRain" [r:eval "library(gRain)"]
  r:eval "library (bnlearn)" ;the R library that lets us use Bayes' nets

  if causal-structure = "big net"[LoadBigNet]
  if causal-structure = "small net"[LoadSmallNet]
  if causal-structure = "asia" [loadAsiaNet]
  if causal-structure = "alarm" [loadAlarmNet]
  if causal-structure = "Vole" [loadVoleNET]
  if causal-structure = "WetGrass" [loadWetGrassNet]
  if causal-structure = "SallyClark" [loadSallyClarkNet]

  if causal-structure = "custom" [
    ;######Upload your custom net here. Either use a whole file via using the UI and this line: <r:eval (word "source('" pathToCustomDAG "')")>
    ;OR copy paste the R script's lines here. Needed:  1. a dag, b. a probability distribution/data fitted onto the dag ("bn.fit")
    ;Make sure each line is embedded like so:  r:eval "R-SCRIPT-LINE". Make sure the syntax is correct (e.g., R is sensitive to small differences such as punctuation).
    ;#####################COPY-PASTE BEGIN


      r:eval (word "source('" path-to-custom-DAG "')")



    ;#####################COPY-PASTE END
    if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]
    useCustomEvidenceAndHypothesisNodes
  ]


  set Bayes-net "bn"
  set number-of-evidence length evidence-nodes
end

to useCustomEvidenceAndHypothesisNodes
  set evidence-nodes []
  let tempString evidence-nodes-custom-DAG

  while [position "\n" tempString != FALSE] [
    let nextNode  (substring tempString 0 position "\n" tempString)
    set evidence-nodes lput nextNode evidence-nodes
    repeat (position "\n" tempString + 1) [set tempString (but-first tempString)]
  ]
  set evidence-nodes lput tempString evidence-nodes

  set hypothesis-node hypothesis-node-custom-DAG
end

to loadAsiaNet
   r:eval  "data(asia)"
   r:eval  "dag <- model2network('[A][S][T|A][L|S][B|S][D|B:E][E|T:L][X|E]')"
   r:eval  "bn <- bn.fit(dag, asia)"
    if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]

  ifelse custom-evidence-and-hypothesis-? = false [
    set hypothesis-node "L"
    set evidence-nodes ["A" "S" "T" "B" "D" "X"]
  ][useCustomEvidenceAndHypothesisNodes]

end

to loadVoleNET
r:eval "dag1 <- model2network('[M1][M2][M3|M1:M2][Vole_present][H0|M3:Vole_present][H1|H0][H5][E6|H5][A3|H5:H1][E7|H5:A3:H1][A1][E1|Vole_present:A1][A2|H0][E2|A2:Vole_present][H3][E5|H3][H2|H0][H4|H3][E4|H4][E3|H2:H4][Auxilliary|H2:H4][Constraint|Auxilliary]')"
r:eval "cptM1 <- array(c(0.5,0.5), dim = 2, dimnames = list(M1 = c('no', 'yes')))"
r:eval "cptM2 <- array(c(0.5,0.5), dim = 2, dimnames = list(M2 = c('no', 'yes')))"
r:eval "cptVole_present <- array(c(0.5,0.5), dim = 2, dimnames = list(Vole_present = c('no', 'yes')))"
r:eval "cptA1 <- array(c(0.5,0.5), dim = 2, dimnames = list(A1 = c('no', 'yes')))"
r:eval "cptH3 <- array(c(0.5,0.5), dim = 2, dimnames = list(H3 = c('no', 'yes')))"
r:eval "cptH5 <- array(c(0.5,0.5), dim = 2, dimnames = list(H5 = c('no', 'yes')))"
r:eval "cptH1 <- array(c(1,0,0.5,0.5), dim = c(2,2), dimnames = list(H1 = c('no', 'yes'), H0 =c('no', 'yes')))"
r:eval "cptH2 <- array(c(0.9,0.1,0.3,0.7), dim = c(2,2), dimnames = list(H2 = c('no', 'yes'), H0 =c('no', 'yes')))"
r:eval "cptH2 <- array(c(0.9,0.1,0.3,0.7), dim = c(2,2), dimnames = list(H2 = c('no', 'yes'), H0 =c('no', 'yes')))"
r:eval "cptE5 <- array(c(0.99,0.01,0.1,0.9), dim = c(2,2), dimnames = list(E5 = c('no', 'yes'), H3 =c('no', 'yes')))"
r:eval "cptH4 <- array(c(1.0,0.0,0.1,0.9), dim = c(2,2), dimnames = list(H4 = c('no', 'yes'), H3 =c('no', 'yes')))"
r:eval "cptE4 <- array(c(0.99,0.01,0,1), dim = c(2,2), dimnames = list(E4 = c('no', 'yes'), H4 =c('no', 'yes')))"
r:eval "cptConstraint <- array(c(0.283,0.717,0.45,0.55,1,0), dim = c(2,3), dimnames = list(Constraint = c('no', 'yes'), Auxilliary = c('H2','H4','impossible')))"
r:eval "cptA2 <- array(c(0,1,0.9,0.1), dim = c(2,2), dimnames = list(A2 = c('no', 'yes'), H0 =c('no', 'yes')))"
r:eval "cptE6 <- array(c(0.99,0.01,0.1,0.9), dim = c(2,2), dimnames = list(E6 = c('no', 'yes'), H5 =c('no', 'yes')))"
r:eval "cptM3 <- array(c(0.9,0.1,0.3,0.7,0.4,0.6,0.2,0.8), dim = c(2,2,2),  dimnames = list(M3 = c('no','yes'),M2 = c('no', 'yes'),M1 = c('no', 'yes')))"
r:eval "cptH0 <- array(c(1.0,0.0,1.0,0.0,0.5,0.5,0.3,0.7), dim = c(2,2,2), dimnames = list(H0 = c('no','yes'),M3 = c('no', 'yes'),Vole_present = c('no', 'yes')))"
r:eval "cptE3 <- array(c(1,0,0.99,0.01,0,1,0,1), dim = c(2,2,2), dimnames = list(E3 = c('no','yes'), H4 = c('no', 'yes'), H2= c('no', 'yes')))"
r:eval "cptAuxilliary <-array(c(0,0,1,0,1,0,1,0,0,0,0,1), dim = c(3,2,2), dimnames = list(Auxilliary = c('H2','H4','impossible'), H4 = c('no', 'yes'), H2= c('no', 'yes')))"
r:eval "cptE1 <- array(c(0.5,0.5,0.5,0.5,1,0,0,1), dim = c(2,2,2), dimnames = list(E1 = c('no','yes'), Vole_present= c('no', 'yes'), A1= c('no', 'yes')))"
r:eval "cptE2 <- array(c(0,1,0.4,0.6,0,1,1,0), dim = c(2,2,2), dimnames = list(E2 = c('no','yes'), Vole_present= c('no', 'yes'), A2= c('no', 'yes')))"
r:eval "cptA3 <- array(c(0.9,0.1,0.001,0.999,1,0,0.3,0.7), dim = c(2,2,2),  dimnames = list(A3 = c('no','yes'), H1= c('no', 'yes'), H5= c('no', 'yes')))"
r:eval "cptE7 <- array(c(1,0,1,0,0.2,0.8,1,0,1,0,0.4,0.6,0.01,0.99,0,1),dim = c(2,2,2,2), dimnames = list(E7 = c('no','yes'), A3= c('no', 'yes'), H5= c('no', 'yes'),H1= c('no', 'yes')))"
r:eval "cpt1 <- list( H0 = cptH0, M1 = cptM1, M2 = cptM2, M3 = cptM3, Vole_present = cptVole_present, E1 = cptE1, A1 = cptA1, E2 = cptE2, A2 = cptA2, H1 = cptH1, H5 = cptH5, E6 = cptE6, E7 = cptE7, A3 = cptA3, H2 = cptH2, H3 = cptH3, H4 = cptH4, E3 = cptE3, E4 = cptE4, E5 = cptE5, Auxilliary = cptAuxilliary, Constraint = cptConstraint)"
r:eval "bn <- custom.fit(dag1, cpt1)"
 if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]

  ifelse custom-evidence-and-hypothesis-? = false [
    set hypothesis-node "H0"
    set evidence-nodes ["E1" "E2" "E3" "E4" "E5" "E6" "E7"]
  ][
    useCustomEvidenceAndHypothesisNodes
  ]

end

to loadAlarmNet
  r:eval "data(alarm)"
  r:eval "dag <- model2network('[HIST|LVF][CVP|LVV][PCWP|LVV][HYP][LVV|HYP:LVF][LVF][STKV|HYP:LVF][ERLO][HRBP|ERLO:HR][HREK|ERCA:HR][ERCA][HRSA|ERCA:HR][ANES][APL][TPR|APL][ECO2|ACO2:VLNG][KINK][MINV|INT:VLNG][FIO2][PVS|FIO2:VALV][SAO2|PVS:SHNT][PAP|PMB][PMB][SHNT|INT:PMB][INT][PRSS|INT:KINK:VTUB][DISC][MVS][VMCH|MVS][VTUB|DISC:VMCH][VLNG|INT:KINK:VTUB][VALV|INT:VLNG][ACO2|VALV][CCHL|ACO2:ANES:SAO2:TPR][HR|CCHL][CO|HR:STKV][BP|CO:TPR]')"
  r:eval  "bn <- bn.fit(dag, alarm)"
  ;r:eval "gRainbn <- compile(as.grain(bn))"

  ifelse custom-evidence-and-hypothesis-? = false [
    set hypothesis-node "CVP"
    set evidence-nodes ["HIST" "CO"]
  ][
    useCustomEvidenceAndHypothesisNodes
  ]

end

to loadWetGrassNet

  r:eval "library (bnlearn)"

  r:eval "dag1 <- model2network('[Rain][Sprinkler][Watson|Rain][Holmes|Rain:Sprinkler]')"

  r:eval "cptRain <- array(c(0.2,0.8), dim = 2, dimnames = list(Rain = c('yes', 'no')))"
  r:eval "cptSprinkler <- array(c(0.1,0.9), dim = 2, dimnames = list(Sprinkler = c('yes', 'no')))"
  r:eval "cptWatson <- array(c(1.0,0.0,0.2,0.8), dim = c(2,2), dimnames = list(Watson = c('yes', 'no'),Rain = c('yes', 'no')))"
  r:eval "cptHolmes <- array(c(1.0, 0.0, 0.9, 0.1,1.0,0.0,0.0,1.0), dim = c(2,2,2), dimnames = list(Holmes = c('yes', 'no'), Rain = c('yes', 'no'), Sprinkler = c('yes', 'no')) )"
  r:eval "cpt1 <- list(Rain = cptRain,Sprinkler = cptSprinkler, Watson = cptWatson,  Holmes =cptHolmes)"
  r:eval "bn <- custom.fit(dag1, cpt1)"
  if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]

  ifelse custom-evidence-and-hypothesis-? = false [
    set hypothesis-node "Sprinkler"
    set evidence-nodes ["Holmes" "Watson"]
  ][
    useCustomEvidenceAndHypothesisNodes
  ]

end

to loadSallyClarkNet

  ;NOTE: I changed SIDS to NO and MURDER to YES.
r:eval "dag1 <- model2network('[ChildACause][ChildBCause|ChildACause][Guilty|Findings][Findings|ChildACause:ChildBCause][ChildABruising|ChildACause][ChildADisease|ChildACause][ChildBBruising|ChildBCause][ChildBDisease|ChildBCause]')"
r:eval "cptChildACause <- array(c(0.921659,0.07834101), dim = 2, dimnames = list(ChildACause = c('no', 'yes')))"
r:eval "cptChildBCause <- array(c(0.9993604, 6.3959067E-4,1.4622862E-4, 0.9998538), dim = c(2, 2), dimnames = list(ChildBCause = c('no', 'yes'),ChildACause = c('no', 'yes')))"
r:eval "cptChildABruising <- array(c(0.99,0.01,0.95,0.05), dim = c(2, 2), dimnames = list(ChildABruising = c('no', 'yes'), ChildACause = c('no', 'yes')))"
r:eval "cptChildBBruising <- array(c(0.99,0.01,0.95,0.05), dim = c(2, 2), dimnames = list(ChildBBruising = c('no', 'yes'), ChildBCause = c('no', 'yes')))"
r:eval "cptChildADisease <- array(c(0.95,0.05,0.999,0.001), dim = c(2, 2), dimnames = list(ChildADisease = c('no', 'yes'),ChildACause = c('no', 'yes')))"
r:eval "cptChildBDisease <- array(c(0.95,0.05,0.999,0.001), dim = c(2, 2), dimnames = list(ChildBDisease = c('no', 'yes'),ChildBCause = c('no', 'yes')))"
r:eval "cptGuilty <- array(c(0.0,1.0,0.0,1.0,1.0,0.0), dim = c(2, 3), dimnames = list(Guilty = c('no', 'yes'), Findings = c('Both Murdered', 'Either Murdered', 'Neither Murdered')))"
r:eval "cptFindings <- array(c(0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0), dim = c(3,2,2), dimnames = list(Findings = c('Both Murdered', 'Either Murdered', 'Neither Murdered'), ChildBCause = c('no', 'yes'), ChildACause = c('no', 'yes')))"
r:eval "cpt1 <- list(ChildABruising = cptChildABruising, ChildADisease = cptChildADisease, ChildBBruising = cptChildBBruising, ChildBDisease = cptChildBDisease, ChildACause = cptChildACause, ChildBCause = cptChildBCause, Findings = cptFindings, Guilty = cptGuilty)"
r:eval "bn <- custom.fit(dag1, cpt1)"
   if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]
  ifelse custom-evidence-and-hypothesis-? = false [
    set hypothesis-node "Guilty"
    set evidence-nodes ["ChildADisease" "ChildBDisease" "ChildABruising" "ChildBBruising"]
  ][
    useCustomEvidenceAndHypothesisNodes
  ]

end

to loadBigNet
  r:eval  "dag1 <- model2network('[A][B|A][C|A][D|A][one|B][two|B][three|B][four|C][five|C][six|C][seven|D][eight|D][nine|D]')"
  r:eval  "cptA <- array(c(0.5,0.5), dim = 2, dimnames = list(A = c('yes', 'no')))"
  r:eval  "cptB <- array(c(0.9, 0.1, 0.1, 0.9), dim = c(2, 2), dimnames = list(B = c('yes', 'no'), A = c('yes', 'no')))"
  r:eval  "cptC <- array(c(0.5, 0.5, 0.5, 0.5), dim = c(2, 2), dimnames = list(C = c('yes', 'no'), A = c('yes', 'no')))"
  r:eval  "cptD <- array(c(0.1, 0.9, 0.9, 0.1), dim = c(2, 2), dimnames = list(D = c('yes', 'no'), A = c('yes', 'no')))"
  r:eval  "cptone <- array(c(0.9, 0.1, 0.1, 0.9), dim = c(2, 2), dimnames = list(one = c('yes', 'no'), B = c('yes', 'no')))"
  r:eval  "cpttwo <- array(c(0.8, 0.2, 0.2, 0.8), dim = c(2, 2), dimnames = list(two = c('yes', 'no'), B = c('yes', 'no')))"
  r:eval  "cptthree <- array(c(0.7, 0.3, 0.3, 0.7), dim = c(2, 2), dimnames = list(three = c('yes', 'no'), B = c('yes', 'no')))"
  r:eval  "cptfour <- array(c(0.9, 0.1, 0.1, 0.9), dim = c(2, 2), dimnames = list(four = c('yes', 'no'), C = c('yes', 'no')))"
  r:eval  "cptfive <- array(c(0.8, 0.2, 0.2, 0.8), dim = c(2, 2), dimnames = list(five = c('yes', 'no'), C = c('yes', 'no')))"
  r:eval  "cptsix <- array(c(0.7, 0.3, 0.3, 0.7), dim = c(2, 2), dimnames = list(six = c('yes', 'no'), C = c('yes', 'no')))"
  r:eval  "cptseven <- array(c(0.9, 0.1, 0.1, 0.9), dim = c(2, 2), dimnames = list(seven = c('yes', 'no'), D = c('yes', 'no')))"
  r:eval  "cpteight <- array(c(0.8, 0.2, 0.2, 0.8), dim = c(2, 2), dimnames = list(eight = c('yes', 'no'), D = c('yes', 'no')))"
  r:eval  "cptnine <- array(c(0.7, 0.3, 0.3, 0.7), dim = c(2, 2), dimnames = list(nine = c('yes', 'no'), D = c('yes', 'no')))"
  r:eval  "cpt1 <- list(A = cptA, B = cptB, C = cptC, D = cptD, one = cptone, two = cpttwo, three = cptthree, four = cptfour, five = cptfive, six = cptsix, seven = cptseven, eight = cpteight, nine = cptnine)"
  r:eval  "bn <- custom.fit(dag1, cpt1)"
  if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]

  ifelse custom-evidence-and-hypothesis-? = false [
    set hypothesis-node "A"
    set evidence-nodes [ "one" "two" "three" "four" "five" "six" "seven" "eight" "nine"]
  ][
    useCustomEvidenceAndHypothesisNodes
  ]
end

to loadSmallNet
  r:eval  "dag <- model2network('[V][CS|V][VT|V][M|CS][I|CS][WHO|VT][RS|VT]')"
  r:eval  "cptV <- array(c(0.5,0.5), dim = 2, dimnames = list(A = c('yes', 'no')))"
  r:eval  "cptCS <- array(c(0.9, 0.1, 0.1, 0.9), dim = c(2, 2), dimnames = list(CS = c('yes', 'no'), V = c('yes', 'no')))"
  r:eval  "cptVT <- array(c(0.8, 0.2, 0.2, 0.8), dim = c(2, 2), dimnames = list(VT = c('yes', 'no'), V = c('yes', 'no')))"
  r:eval  "cptI  <- array(c(0.7, 0.3, 0.3, 0.7), dim = c(2, 2), dimnames = list(I = c('yes', 'no'), CS = c('yes', 'no')))"
  r:eval  "cptM  <- array(c(0.8, 0.2, 0.2, 0.8), dim = c(2, 2), dimnames = list(M = c('yes', 'no'), CS = c('yes', 'no')))"
  r:eval  "cptWHO <- array(c(0.8, 0.2, 0.2, 0.8), dim = c(2, 2), dimnames = list(WHO = c('yes', 'no'), VT = c('yes', 'no')))"
  r:eval  "cptRS <- array(c(0.2, 0.8, 0.8, 0.2), dim = c(2, 2), dimnames = list(RS = c('yes', 'no'), VT = c('yes', 'no')))"
  r:eval  "cpt <- list(V = cptV, VT = cptVT, CS = cptCS, I = cptI, M = cptM, WHO = cptWHO, RS = cptRS)"
  r:eval  "bn <- custom.fit(dag, cpt)"
  if approximation = "gRain" [r:eval "gRainbn <- compile(as.grain(bn))"]

  ifelse custom-evidence-and-hypothesis-? = false [
    set evidence-nodes ["I" "M" "WHO" "RS"]
    set hypothesis-node "V"
  ][
    useCustomEvidenceAndHypothesisNodes
  ]
end
